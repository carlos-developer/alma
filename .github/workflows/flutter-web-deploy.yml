name: Deploy ALMA to GitHub Pages

# Activadores del workflow
on:
  # Despliegue autom√°tico cuando se hace push a main
  push:
    branches: [ main ]
  
  # Permite ejecutar manualmente desde la pesta√±a Actions
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Ejecutar con logs de debug'
        required: false
        default: 'false'

# Permisos necesarios para el despliegue
permissions:
  contents: write
  pages: write
  id-token: write

# Evita ejecuciones concurrentes
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job √∫nico simplificado para build y deploy
  build-and-deploy:
    name: Build y Deploy ALMA Web
    runs-on: ubuntu-latest
    
    steps:
      # ============================================
      # PASO 1: Checkout del c√≥digo
      # ============================================
      - name: üì• Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para obtener todo el historial
      
      # ============================================
      # PASO 2: Configurar Flutter
      # ============================================
      - name: üéØ Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      
      # ============================================
      # PASO 3: Informaci√≥n del entorno (debug)
      # ============================================
      - name: üìã Informaci√≥n del entorno
        if: github.event.inputs.debug_enabled == 'true'
        run: |
          echo "=== Informaci√≥n del Sistema ==="
          flutter --version
          flutter doctor -v
          echo ""
          echo "=== Informaci√≥n del Repositorio ==="
          echo "Repositorio: ${{ github.repository }}"
          echo "Rama: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
      
      # ============================================
      # PASO 4: Cache de dependencias Pub
      # ============================================
      - name: üì¶ Cache de dependencias
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      # ============================================
      # PASO 5: Ajuste temporal de dependencias
      # ============================================
      - name: üîß Ajustar compatibilidad de dependencias
        run: |
          # Fix temporal para flutter_lints si es necesario
          if grep -q "flutter_lints: \^5\." pubspec.yaml; then
            echo "Ajustando versi√≥n de flutter_lints para compatibilidad..."
            sed -i 's/flutter_lints: \^5\.0\.0/flutter_lints: \^4\.0\.0/' pubspec.yaml
          fi
      
      # ============================================
      # PASO 6: Instalar dependencias
      # ============================================
      - name: üì• Instalar dependencias
        run: |
          flutter config --enable-web
          flutter pub get
      
      # ============================================
      # PASO 7: An√°lisis de c√≥digo (no bloqueante)
      # ============================================
      - name: üîç An√°lisis de c√≥digo
        run: flutter analyze || echo "‚ö†Ô∏è Advertencias en an√°lisis (continuando...)"
        continue-on-error: true
      
      # ============================================
      # PASO 8: Ejecutar tests (no bloqueante)
      # ============================================
      - name: üß™ Ejecutar tests
        run: |
          flutter test --coverage || echo "‚ö†Ô∏è Algunos tests fallaron (continuando...)"
        continue-on-error: true
      
      # ============================================
      # PASO 9: Build de producci√≥n
      # ============================================
      - name: üèóÔ∏è Build Flutter Web
        run: |
          # Build con optimizaciones para producci√≥n
          flutter build web \
            --release \
            --base-href /alma/ \
            --web-renderer canvaskit \
            --dart-define=ENVIRONMENT=production \
            --dart-define=BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --dart-define=BUILD_NUMBER=${{ github.run_number }}
          
          # Asegurar archivos necesarios para GitHub Pages
          touch build/web/.nojekyll
          
          # Crear 404.html para manejo de rutas
          cat > build/web/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>ALMA - Aprendizaje y L√≥gica para Mentes Activas</title>
            <script>
              const pathSegments = window.location.pathname.split('/').filter(Boolean);
              const repoName = pathSegments[0];
              if (pathSegments.length > 1) {
                window.location.href = '/' + repoName + '/';
              }
            </script>
          </head>
          <body>
            <p>Redirigiendo a ALMA...</p>
          </body>
          </html>
          EOF
          
          # Crear archivo de informaci√≥n del build
          cat > build/web/build-info.json << EOF
          {
            "version": "1.0.0",
            "buildNumber": "${{ github.run_number }}",
            "buildDate": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "environment": "production"
          }
          EOF
      
      # ============================================
      # PASO 10: Optimizaciones adicionales
      # ============================================
      - name: ‚ö° Optimizaciones de rendimiento
        run: |
          # Comprimir assets si es posible (opcional)
          if command -v gzip >/dev/null 2>&1; then
            find build/web -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" \) \
              -exec gzip -9 -k {} \; 2>/dev/null || true
          fi
          
          # Mostrar tama√±o del build
          echo "=== Tama√±o del Build ==="
          du -sh build/web/
          echo ""
          echo "=== Archivos principales ==="
          ls -lh build/web/*.js 2>/dev/null || true
          ls -lh build/web/*.html
      
      # ============================================
      # PASO 11: Desplegar a GitHub Pages
      # ============================================
      - name: üöÄ Desplegar a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: |
            Deploy ALMA Web App v1.0.0
            
            Build: #${{ github.run_number }}
            Commit: ${{ github.sha }}
            Date: ${{ github.event.head_commit.timestamp }}
          cname: ''  # Dejar vac√≠o si no tienes dominio personalizado
      
      # ============================================
      # PASO 12: Notificaci√≥n de √©xito
      # ============================================
      - name: ‚úÖ Despliegue completado
        run: |
          echo "=========================================="
          echo "   DESPLIEGUE COMPLETADO EXITOSAMENTE"
          echo "=========================================="
          echo ""
          echo "üéØ Build Number: #${{ github.run_number }}"
          echo "üì¶ Commit: ${{ github.sha }}"
          echo "üë§ Desplegado por: ${{ github.actor }}"
          echo ""
          echo "üåê La aplicaci√≥n estar√° disponible en:"
          echo "   https://${{ github.repository_owner }}.github.io/alma/"
          echo ""
          echo "‚è±Ô∏è El sitio puede tardar 2-5 minutos en actualizarse"
          echo ""
          echo "üìä Ver estado del despliegue:"
          echo "   https://github.com/${{ github.repository }}/deployments"
          echo "=========================================="
      
      # ============================================
      # PASO 13: Crear release (opcional, solo tags)
      # ============================================
      - name: üì¶ Crear Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/web/build-info.json
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Metadata del workflow
# √öltima actualizaci√≥n: 2025-08-09
# Versi√≥n: 1.0.0
# Proyecto: ALMA - Aprendizaje y L√≥gica para Mentes Activas